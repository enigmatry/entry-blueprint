trigger:
- master

variables:
  artifactName: 'enigmatry-blueprint-template'
  majorMinorVersion: 1.0
  nodeVersion: '16.20.2'
  projectNameAngularApp: enigmatry-blueprint-app
  projectNamePrefix: Enigmatry.Blueprint

# This determines the build number
name: $(majorMinorVersion)$(Rev:.r)

resources:
  repositories:
    - repository: templates
      type: git
      name: Enigmatry - Azure Pipelines Templates/enigmatry-azure-pipelines-templates

stages:
- stage: 'ci_build'
  displayName: 'Build the web application'
  jobs: 
  - job: build_prerequisites
    displayName: Get the version for the build
    steps:
    - checkout: self
      fetchDepth: 0
    - task: DotNetCoreCLI@2
      displayName: Add Manifest for tool installation
      inputs:
        command: 'custom'
        custom: 'new '
        arguments: tool-manifest
    - task: DotNetCoreCLI@2
      displayName: Install minver
      inputs:
        command: 'custom'
        custom: 'tool '
        arguments: install minver-cli
    - task: PowerShell@2
      displayName: 'Set MinVer Version'
      inputs:
        targetType: inline
        script: |
          $version = dotnet minver -p preview
          echo "##vso[build.updatebuildnumber]$version"
          Write-Host "Setting MinVer to '$version'"

  - template: build-angular-app-job.yml@templates
    parameters:
      displayName: 'Build Angular App'
      nodeVersion: $(nodeVersion)
      projectNameAngularApp: $(projectNameAngularApp)
  
  - template: build-dotnet-api-job.yml@templates
    parameters:
      artifactName: $(artifactName)
      displayName: 'Build .net API'
      projectNamePrefix: $(projectNamePrefix)

  - template: build-report-job.yml@templates
    parameters:
      artifactName: $(artifactName)
      displayName: 'Generate Reports'
      projectNameAngularApp: $(projectNameAngularApp)
      projectNamePrefix: $(projectNamePrefix)

- stage: publish_nuget
  displayName: publish packages to NuGet
  dependsOn: ci_build
  # condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')))
  jobs:
  - deployment: Publish
    environment: nuget
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'specific'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: NuGetCommand@2
            inputs:
              command: 'push'
              packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
              nuGetFeedType: 'internal'
              publishVstsFeed: 'b3d80552-b808-495c-9332-82888c12c1bf/f22a4b99-bf94-4196-922f-3f8a670008e9'

