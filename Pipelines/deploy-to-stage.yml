parameters:
- name: environment
- name: serviceConnection
  
jobs:
- template: take-web-app-offline.yml@templates
  parameters:
    jobName: 'take_web_app_offline'
    displayName: 'Take Angular App offline'
    environment: ${{ parameters.environment }}
    subscription: ${{ parameters.serviceConnection }}
    webAppName: $(webAppName)

- template: take-web-app-offline.yml@templates
  parameters:
    jobName: 'take_api_offline'
    displayName: 'Take API offline'
    environment: ${{ parameters.environment }}
    subscription: ${{ parameters.serviceConnection }}
    webAppName: $(webAppName)
    virtualApplication: 'api'

- template: take-web-app-offline.yml@templates
  parameters:
    jobName: 'take_webjob_offline'
    displayName: 'Take WebJob offline'
    environment: ${{ parameters.environment }}
    subscription: ${{ parameters.serviceConnection }}
    webAppName: $(webJobWebAppName)

- template: update-database-job.yml@templates
  parameters:
    dotnetVersion: '8.x'
    dbContextName: $(dbContextName)
    displayName: 'Update the database'
    dependsOn:
    - take_web_app_offline
    - take_api_offline
    - take_webjob_offline
    environment: ${{ parameters.environment }}
    migrationConnectionString: $(migrationConnectionString)
    projectNamePrefix: $(projectNamePrefix)

- template: deploy-web-app.yml@templates
  parameters:
    jobName: 'deploy_angular_app'
    artifactName: $(artifactName)
    displayName: Deploy the Angular web app
    environment: ${{ parameters.environment }}
    packageName: $(projectNamePrefix).App
    subscription: ${{ parameters.serviceConnection }}
    webAppName: $(webAppName)
    publishProfilePostfix: app

- template: deploy-web-app.yml@templates
  parameters:
    jobName: 'deploy_api'
    artifactName: $(artifactName)
    displayName: Deploy the BackEnd API
    environment: ${{ parameters.environment }}
    packageName: $(projectNamePrefix).Api
    subscription: ${{ parameters.serviceConnection }}
    webAppName: $(webAppName)
    publishProfilePostfix: api
    virtualApplication: api

- template: deploy-web-app.yml@templates
  parameters:
    jobName: 'deploy_webjob'
    artifactName: $(artifactName)
    displayName: Deploy the Scheduler Web Job
    environment: ${{ parameters.environment }}
    packageName: $(projectNamePrefix).Scheduler
    subscription: ${{ parameters.serviceConnection }}
    webAppName: $(webJobWebAppName)
    publishProfilePostfix: scheduler
    excludeFilesFromAppDataFlag: false

- job: git_tag
  displayName: Create Git tag
  dependsOn:
  - deploy_angular_app
  - deploy_api
  - deploy_webjob
  steps:
    - checkout: self
      displayName: 'Checkout current repo'
      persistCredentials: true
    - task: Bash@3
      displayName: Create Git tag
      inputs:
        targetType: 'inline'
        script: |
          git tag ${{ parameters.environment }}-$(Build.SourceBranchName)-$(Build.BuildNumber)
          git push origin ${{ parameters.environment }}-$(Build.SourceBranchName)-$(Build.BuildNumber)